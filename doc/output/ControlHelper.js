Ext.data.JsonP.ControlHelper({"tagname":"class","name":"ControlHelper","autodetected":{},"files":[{"filename":"flow.js","href":"flow.html#ControlHelper"}],"members":[{"name":"inc","tagname":"method","owner":"ControlHelper","id":"method-inc","meta":{}},{"name":"next","tagname":"method","owner":"ControlHelper","id":"method-next","meta":{}},{"name":"parallel","tagname":"method","owner":"ControlHelper","id":"method-parallel","meta":{}},{"name":"set","tagname":"method","owner":"ControlHelper","id":"method-set","meta":{}},{"name":"setBaggage","tagname":"method","owner":"ControlHelper","id":"method-setBaggage","meta":{}},{"name":"tick","tagname":"method","owner":"ControlHelper","id":"method-tick","meta":{"private":true}}],"alternateClassNames":[],"aliases":{},"id":"class-ControlHelper","short_doc":"Provides control functions to associated SerialManager as well as\nhelps to manage parallel async calls within the ser...","component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/flow.html#ControlHelper' target='_blank'>flow.js</a></div></pre><div class='doc-contents'><p>Provides control functions to associated SerialManager as well as\nhelps to manage parallel async calls within the serial task.</p>\n\n<p>Works internally with a simple idea of using counters to manage parallel calls.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-inc' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='ControlHelper'>ControlHelper</span><br/><a href='source/flow.html#ControlHelper-method-inc' target='_blank' class='view-source'>view source</a></div><a href='#!/api/ControlHelper-method-inc' class='name expandable'>inc</a>( <span class='pre'>[val]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Increment counter. ...</div><div class='long'><p>Increment counter. Use carefully within async callbacks to avoid race conditions.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>val</span> : Number (optional)<div class='sub-desc'><p>Increment counter by val. Val should be a positive integer.</p>\n<p>Defaults to: <code>1</code></p></div></li></ul></div></div></div><div id='method-next' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='ControlHelper'>ControlHelper</span><br/><a href='source/flow.html#ControlHelper-method-next' target='_blank' class='view-source'>view source</a></div><a href='#!/api/ControlHelper-method-next' class='name expandable'>next</a>( <span class='pre'>error, result</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Execute the next task of the series. ...</div><div class='long'><p>Execute the next task of the series.\nNote: The next task won't be called if counter is greater than zero.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>error</span> : Object<div class='sub-desc'></div></li><li><span class='pre'>result</span> : Object<div class='sub-desc'></div></li></ul></div></div></div><div id='method-parallel' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='ControlHelper'>ControlHelper</span><br/><a href='source/flow.html#ControlHelper-method-parallel' target='_blank' class='view-source'>view source</a></div><a href='#!/api/ControlHelper-method-parallel' class='name expandable'>parallel</a>( <span class='pre'>n, func, [context]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Utility function to help one to execute 'n' number of parallel tasks. ...</div><div class='long'><p>Utility function to help one to execute 'n' number of parallel tasks.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>n</span> : Number|Array|Object<div class='sub-desc'><p>If number then this is the number of parallel tasks. If n is an array then func is called for each item of the array.\nIf object then the config is mostly same as set() method and additionally config.array can be set instead of config.count.</p>\n</div></li><li><span class='pre'>func</span> : Function<div class='sub-desc'><p>(i or item, cb) The function to call 'n' number of times. func gets an index (or an item of array) and a callback as parameters.\nMake sure callback is called eventually and exactly once within func. Calling the callback a second time won't do anything (the passed values are discarded).</p>\n</div></li><li><span class='pre'>context</span> : Object (optional)<div class='sub-desc'><p>Context of 'this' keyword within func.</p>\n</div></li></ul></div></div></div><div id='method-set' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='ControlHelper'>ControlHelper</span><br/><a href='source/flow.html#ControlHelper-method-set' target='_blank' class='view-source'>view source</a></div><a href='#!/api/ControlHelper-method-set' class='name expandable'>set</a>( <span class='pre'>config</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Set counter value and also the behavior of task execution. ...</div><div class='long'><p>Set counter value and also the behavior of task execution.\n\"Behavior\" means to tell flowjs what to do when counter hits zero or when faced with an error.</p>\n\n<p>Polymorhic form of set(count, repeat, tolerance) method.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>config</span> : Object<div class='sub-desc'>\n<ul><li><span class='pre'>count</span> : Number<div class='sub-desc'><p>Same as count param when it is a number.</p>\n</div></li><li><span class='pre'>repeat</span> : Boolean (optional)<div class='sub-desc'><p>Same as repeat param.</p>\n<p>Defaults to: <code>false</code></p></div></li><li><span class='pre'>tolerance</span> : Boolean (optional)<div class='sub-desc'><p>Same as tolerance param.</p>\n<p>Defaults to: <code>manager.tolerance</code></p></div></li></ul></div></li></ul></div></div></div><div id='method-setBaggage' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='ControlHelper'>ControlHelper</span><br/><a href='source/flow.html#ControlHelper-method-setBaggage' target='_blank' class='view-source'>view source</a></div><a href='#!/api/ControlHelper-method-setBaggage' class='name expandable'>setBaggage</a>( <span class='pre'>b</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Set \"baggage\". ...</div><div class='long'><p>Set \"baggage\". This will be passed as third parameter to the next task.\nUseful for avoiding scoped variables for your tasks.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>b</span> : Object<div class='sub-desc'></div></li></ul></div></div></div><div id='method-tick' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='ControlHelper'>ControlHelper</span><br/><a href='source/flow.html#ControlHelper-method-tick' target='_blank' class='view-source'>view source</a></div><a href='#!/api/ControlHelper-method-tick' class='name expandable'>tick</a>( <span class='pre'>[index], error, result</span> )<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>Decrements counter by 1. ...</div><div class='long'><p>Decrements counter by 1. Send the error or result.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>index</span> : Number (optional)<div class='sub-desc'><p>The desired index in the results/errors array (of the next task) where the provided result/error should be placed.</p>\n</div></li><li><span class='pre'>error</span> : Any|null<div class='sub-desc'>\n</div></li><li><span class='pre'>result</span> : Any|null<div class='sub-desc'>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});